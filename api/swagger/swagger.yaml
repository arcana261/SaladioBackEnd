swagger: '2.0'
info:
  title: Saladio API
  description: Backend to provide various functionalities to clients
  version: "1.0.0"
host: 127.0.0.1:10010
#host: 178.162.207.98:10010
schemes:
  - http
basePath: /v1
produces:
  - application/json
consumes:
  - application/json
responses:
  Conflict:
    description: usually occurs when target resource exists or is already in requested state
    schema:
      $ref: '#/definitions/SystemError'
  InternalServerError:
    description: occurs when system is interrupted by an unexpected exception or internal error
    schema:
      $ref: '#/definitions/SystemError'
  NotFound:
    description: happens when target resource is not found on the server
    schema:
      $ref: '#/definitions/SystemError'
  BadRequest:
    description: happens when input parameters does not match criteria
    schema:
      $ref: '#/definitions/SystemError'
securityDefinitions:
  basic:
    type: basic
    description: these APIs use basic HTTP authentication
definitions:
  SystemError:
    type: object
    description: encapsulates system error messages
    properties:
      code:
        type: integer
        description: an integer that may show more insight about occurred error
      message:
        type: string
        description: a text message that may show more insight about occured error
      stack:
        type: string
        description: if debugging is disabled, will show stack trace of occured error
    example:
      code: -1
      message: 'internal server error occured'
      stack: 'error at a.js line 23...'
  SaladComponent:
    type: object
    description: specifies a component used in ordering a custom salad
    required:
      - name
      - weight
      - price
      - fat
      - carbohydrat
      - energy
      - moisture
      - sugar
      - fibre
      - calcium
      - iron
      - magnesium
      - phosphorus
      - zinc
      - copper
      - manganese
      - vitamin_e
      - vitamin_d
      - vitamin_c
      - thiamin
      - vitamin_b2
      - vitamin_b3
      - vitamin_b6
      - vitamin_b12
      - vitamin_k
      - vitamin_a
    properties:
      id:
        type: integer
        description: identifier of salad component
        minimum: 0
      name:
        type: string
        description: Name of salad component
        minLength: 1
      weight:
        type: number
        description: Effect of 1 unit of component on total weight of the salad (in gramms)
        minimum: 0
      price:
        type: number
        description: Effect of 1 unit of component on total salad price (in Rials)
        minimum: 0
      code:
        type: string
        description: a generic code
        minLength: 1
      description:
        type: string
        description: a human readable description
        minLength: 1
      protein:
        type: number
        description: salad fact sheet item
        minimum: 0
      fat:
        type: number
        description: salad fact sheet item
        minimum: 0
      carbohydrat:
        type: number
        description: salad fact sheet item
        minimum: 0
      energy:
        type: number
        description: salad fact sheet item
        minimum: 0
      moisture:
        type: number
        description: salad fact sheet item
        minimum: 0
      sugar:
        type: number
        description: salad fact sheet item
        minimum: 0
      fibre:
        type: number
        description: salad fact sheet item
        minimum: 0
      calcium:
        type: number
        description: salad fact sheet item
        minimum: 0
      iron:
        type: number
        description: salad fact sheet item
        minimum: 0
      magnesium:
        type: number
        description: salad fact sheet item
        minimum: 0
      phosphorus:
        type: number
        description: salad fact sheet item
        minimum: 0
      zinc:
        type: number
        description: salad fact sheet item
        minimum: 0
      copper:
        type: number
        description: salad fact sheet item
        minimum: 0
      manganese:
        type: number
        description: salad fact sheet item
        minimum: 0
      vitamin_e:
        type: number
        description: salad fact sheet item
        minimum: 0
      vitamin_d:
        type: number
        description: salad fact sheet item
        minimum: 0
      vitamin_c:
        type: number
        description: salad fact sheet item
        minimum: 0
      thiamin:
        type: number
        description: salad fact sheet item
        minimum: 0
      vitamin_b2:
        type: number
        description: salad fact sheet item
        minimum: 0
      vitamin_b3:
        type: number
        description: salad fact sheet item
        minimum: 0
      vitamin_b6:
        type: number
        description: salad fact sheet item
        minimum: 0
      vitamin_b12:
        type: number
        description: salad fact sheet item
        minimum: 0
      vitamin_k:
        type: number
        description: salad fact sheet item
        minimum: 0
      vitamin_a:
        type: number
        description: salad fact sheet item
        minimum: 0
    example:
      id: 10
      name: 'kahoo'
      weight: 0.2
      callorie: 0.4
      price: 1024.5
  SaladComponentGroup:
    type: object
    description: shows collection of custom salad components bundled together
    required:
      - name
      - items
    properties:
      name:
        type: string
        description: Name of salad component group
        minLength: 1
      items:
        type: array
        items:
          $ref: '#/definitions/SaladComponent'
    example:
      name: 'sabzijat'
      items:
        - name: 'kahoo'
          weight: 0.2
          callorie: 0.4
          price: 1024.5
  PersianDate:
    type: object
    description: represents a jalali date
    required:
      - year
      - month
      - day
    properties:
      year:
        type: integer
        description: Jalali year
        minimum: 1300
        maximum: 1500
        default: 1395
      month:
        type: integer
        description: month of year, starting from 1
        minimum: 1
        maximum: 12
        default: 9
      day:
        type: integer
        description: day of month, starting from 1
        minimum: 1
        maximum: 31
        default: 27
    example:
      year: 1395
      month: 9
      day: 25
  Email:
    type: string
    description: email address of user
    pattern: '^[A-Za-z0-9._%+-]+@[A-Za-z0-9.-]+\.[A-Za-z]{2,}$'
    default: saladio@domain.com
  PhoneNumber:
    type: string
    description: mobile (cell) phone number of user
    pattern: '^(\+?989\d{2}|09\d{2})\d{7}$'
    default: '09123334444'
  User:
    type: object
    description: encapsulates information about a registered user
    required:
      - email
      - phoneNumber
      - firstName
      - lastName
      - gender
      - birthDate
      - addresses
      - height
    properties:
      userName:
        type: string
        description: Username
      email:
        type: string
        description: email address of user
        pattern: '^[A-Za-z0-9._%+-]+@[A-Za-z0-9.-]+\.[A-Za-z]{2,}$'
        default: saladio@domain.com
      phoneNumber:
        type: string
        description: mobile (cell) phone number of user
        pattern: '^(\+?989\d{2}|09\d{2})\d{7}$'
        default: '09123334444'
      password:
        type: string
        description: chosen password for user
        minLength: 8
        default: '12345678'
      firstName:
        type: string
        description: user firstname
        minLength: 1
        default: 'saladio'
      lastName:
        type: string
        description: user lastname
        minLength: 1
        default: 'chef'
      birthDate:
        $ref: '#/definitions/PersianDate'
      gender:
        type: string
        description: gender of user
        default: 'female'
        enum:
          - male
          - female
      weight:
        type: number
        description: weight of registered user (kg)
        minimum: 1
        maximum: 300
        default: 56
      height:
        type: integer
        description: height in (cm)
        minimum: 50
        maximum: 280
        default: 170
      addresses:
        type: array
        description: User delivery addresses
        minLength: 1
        default:
          - saadat abad, majd, pelak 2, vahed 27
        items:
          type: string
          minLength: 1
    example:
      userName: saladio@domain.com
      email: saladio@domain.com
      phoneNumber: '09123338888'
      password: '12345678'
      firstName: saladio
      lastName: chef
      birthDate:
        year: 1395
        month: 9
        day: 25
      gender: female
      weight: 56
      addresses:
        - saadat abad, majd, pelak 2, vahed 27
  URL:
    type: string
    description: represents an internet resource
    pattern: '^(http(s)?:\/\/.)?((www\.)?[-a-zA-Z0-9@:%._\+~#=]{2,256}\.[a-z]{2,6}|(\d{1,3}\.){3,3}\d{1,3}(:\d{1,5})?)\b([-a-zA-Z0-9@:%_\+.~#?&\/=]*)$'
  Salad:
    type: object
    description: |
      acts as a base class for all saved salads (classics and user ordered)
    required:
      - name
    properties:
      id:
        type: integer
        description: a hidden system id
        minimum: 0
      name:
        type: string
        description: name of salad
        minLength: 1
        default: my salad
      description:
        type: string
        description: A brief description about salad
      picture:
        type: string
        description: represents an internet resource
        pattern: '^(http(s)?:\/\/.)?((www\.)?[-a-zA-Z0-9@:%._\+~#=]{2,256}\.[a-z]{2,6}|(\d{1,3}\.){3,3}\d{1,3}(:\d{1,5})?)\b([-a-zA-Z0-9@:%_\+.~#?&\/=]*)$'
      callorie:
        type: number
        description: total callorie of salad (in K callorie)
        minimum: 0
      weight:
        type: number
        description: total weight of salad (in gramms)
        minimum: 0
      price:
        type: integer
        description: total price of salad (in rials)
        minimum: 0
  PickedSaladComponent:
    type: object
    description: |
      represents user choice about how many
      components to user in a custom salad
    required:
      - saladComponentId
      - quantity
    properties:
      saladComponentId:
        type: integer
        description: id of salad component
        minimum: 0
      quantity:
        type: integer
        description: number of units picked
        minimum: 0
  SavedSalad:
    description: represents a user saved saved salad
    allOf:
      - $ref: '#/definitions/Salad'
      - type: object
        required:
          - ingredients
        properties:
          ingredients:
            type: array
            description: salad components
            minLength: 1
            items:
              $ref: '#/definitions/PickedSaladComponent'
  ClassicSalad:
    description: represents a pre-defined salad
    allOf:
      - $ref: '#/definitions/Salad'
      - type: object
        required:
          - longDescription
          - ingredients
        properties:
          longDescription:
            type: string
            description: |
              denotes more descriptive long description of
              salad possibly a paragraph or two
            minLength: 1
          ingredients:
            type: string
            description: shows ingredients used in salad
            minLength: 1
  ClassicSaladCatagory:
    description: represents a catagory of classic salads
    type: object
    required:
      - name
    properties:
      id:
        type: integer
        description: id of catagory
      name:
        type: string
        description: shows name of salad catagory
  RecordsFiltered:
    description: shows number of filtered records
    type: integer
    minimum: 0
  RecordsTotal:
    type: integer
    description: shows number of total records
    minimum: 0
  DeliverySchedule:
    description: represents delivery schedules
    type: object
    required:
      - catagory
      - fromHour
      - toHour
    properties:
      id:
        type: integer
        description: id of delivery schedule
        minimum: 0
      catagory:
        type: string
        description: whether it is launch or dinner
        enum:
          - launch
          - dinner
        default: launch
      fromHour:
        type: integer
        description: start hour of delivery range
        minimum: 8
        maximum: 24
        default: 11
      toHour:
        type: integer
        description: end hour of delivery range
        minimum: 8
        maximum: 24
        default: 12
  Order:
    type: object
    description: represents a salad order
    required:
      - saladId
      - deliveryDate
      - deliveryScheduleId
      - address
    properties:
      id:
        type: integer
        description: id of order
        minimum: 0
      saladId:
        type: integer
        description: which salad which has been selected
        minimum: 0
      deliveryDate:
        $ref: '#/definitions/PersianDate'
      deliveryScheduleId:
        type: integer
        description: which shipping hour user has selected
        minimum: 0
      address:
        type: string
        description: delivery address
        minLength: 1
      price:
        type: integer
        description: price of salad in rials
        minimum: 0
parameters:
  listStart:
    name: start
    in: query
    type: integer
    description: starting offset to fetch list
    required: false
    minimum: 0
  listLength:
    name: length
    in: query
    type: integer
    description: number of items to fetch from list
    required: true
    minimum: 0
    default: 10
    maximum: 50
  fromDateYear:
    name: fromDateYear
    in: query
    type: integer
    description: filter results based on persian calendar
    required: false
    default: 1395
    minimum: 1390
    maximum: 1410
  fromDateMonth:
    name: fromDateMonth
    in: query
    type: integer
    description: filters results based on persian calendar
    required: false
    default: 9
    minimum: 1
    maximum: 12
  fromDateDay:
    name: fromDateDay
    in: query
    type: integer
    description: filters results based on persian calendar
    required: false
    default: 1
    minimum: 1
    maximum: 31
  toDateYear:
    name: toDateYear
    in: query
    type: integer
    description: filters results based on persian calendar
    required: false
    default: 1395
    minimum: 1390
    maximum: 1410
  toDateMonth:
    name: toDateMonth
    in: query
    type: integer
    description: filters results based on persian calendar
    required: false
    default: 9
    minimum: 1
    maximum: 12
  toDateDay:
    name: toDateDay
    in: query
    type: integer
    description: filters results based on persian calendar
    required: false
    default: 31
    minimum: 1
    maximum: 31
paths:
  /swagger:
    x-swagger-pipe: swagger_raw
  /App/CheckVersion:
    x-swagger-router-controller: app
    get:
      description: checks if application version is good
      operationId: checkAppVersion
      tags:
        - 'Role: Guest'
        - App
      parameters:
        - name: version
          in: query
          required: true
          description: app version
          type: string
      responses:
        200:
          description: shows whether app version is ok
          schema:
            type: object
            properties:
              isOk:
                type: boolean
                description: whether app version is correct
  /SaladComponentGroups:
    x-swagger-router-controller: saladcomponentgroup
    get:
      description: Returns list of salad components to build custom salads
      operationId: getSaladComponentGroup
      parameters:
        - $ref: '#/parameters/listStart'
        - $ref: '#/parameters/listLength'
      security:
        - basic: []
      x-required-role: app
      tags:
        - Salad Componet Groups
        - 'Role: app'
      responses:
        200:
          description: A list of salad components
          schema:
            type: object
            required:
              - recordsTotal
              - recordsFiltered
              - data
            properties:
              recordsFiltered:
                type: integer
                description: total number of filtered records
                minimum: 0
              recordsTotal:
                type: integer
                description: total number of records
                minimum: 0
              data:
                type: array
                description: actual list of data
                items:
                  $ref: '#/definitions/SaladComponentGroup'
        500:
          $ref: '#/responses/InternalServerError'
  /SaladComponents/{componentId}:
    x-swagger-router-controller: saladcomponent
    get:
      parameters:
        - name: componentId
          in: path
          type: integer
          description: Get information about a specific salad component
          required: true
          minimum: 0
      operationId: getSaladComponentById
      security:
        - basic: []
      x-required-role:
        - app
      tags:
        - Salad Components
        - 'Role: app'
      responses:
        200:
          description: returns salad component
          schema:
            $ref: '#/definitions/SaladComponent'
        404:
          $ref: '#/responses/NotFound'
        500:
          $ref: '#/responses/InternalServerError'
  /Users:
    x-swagger-router-controller: user
    put:
      description: register a new user in the system
      operationId: signup
      tags:
        - Users
        - 'Role: guest'
      parameters:
        - name: signup
          in: body
          description: information about user to signup
          schema: 
            $ref: '#/definitions/User'
          required: true
      responses:
        200:
          description: indicates that user is signedup successfuly
          schema:
            type: object
            required:
              - userName
            properties:
              userName:
                type: string
                description: username of newly added user
                minLength: 1
        409:
          $ref: '#/responses/Conflict'
        500:
          $ref: '#/responses/InternalServerError'
  /Users/Me:
    x-swagger-router-controller: user
    get:
      description: get information about currently logged on user
      operationId: getCurrentUser
      tags:
        - Users
        - 'Role: app'
      security:
        - basic: []
      responses:
        200:
          description: contains an object which holds user information
          schema:
            $ref: '#/definitions/User'
  /Users/Me/Needs:
    x-swagger-router-controller: user
    get:
      description: gets how much the body of user needs like callorie, protein, etc
      operationId: getCurrentUserNeeds
      tags:
        - Users
        - 'Role: app'
      security:
        - basic: []
      responses:
        200:
          description: ddd
          schema:
            type: object
            required:
              - vitamin_a
              - vitamin_c
              - vitamin_d
              - vitamin_e
              - vitamin_k
              - vitamin_b1
              - vitamin_b2
              - vitamin_b3
              - vitamin_b6
              - vitamin_b12
              - calcium
              - copper
              - iron
              - magnesium
              - manganese
              - phosphorus
              - zinc
            properties:
              energy:
                type: number
                description: fact sheet item
                minimum: 0
              vitamin_a:
                type: number
                description: fact sheet item
                minimum: 0
              vitamin_c:
                type: number
                description: fact sheet item
                minimum: 0
              vitamin_d:
                type: number
                description: fact sheet item
                minimum: 0
              vitamin_e:
                type: number
                description: fact sheet item
                minimum: 0
              vitamin_k:
                type: number
                description: fact sheet item
                minimum: 0
              vitamin_b1:
                type: number
                description: fact sheet item
                minimum: 0
              vitamin_b2:
                type: number
                description: fact sheet item
                minimum: 0
              vitamin_b3:
                type: number
                description: fact sheet item
                minimum: 0
              vitamin_b6:
                type: number
                description: fact sheet item
                minimum: 0
              vitamin_b12:
                type: number
                description: fact sheet item
                minimum: 0
              calcium:
                type: number
                description: fact sheet item
                minimum: 0
              copper:
                type: number
                description: fact sheet item
                minimum: 0
              iron:
                type: number
                description: fact sheet item
                minimum: 0
              magnesium:
                type: number
                description: fact sheet item
                minimum: 0
              manganese:
                type: number
                description: fact sheet item
                minimum: 0
              phosphorus:
                type: number
                description: fact sheet item
                minimum: 0
              zinc:
                type: number
                description: fact sheet item
                minimum: 0
  /Users/Me/PromoteToFriends:
    x-swagger-router-controller: user
    put:
      description: promote the application to friends
      operationId: promoteToFriends
      parameters:
        - name: friend
          in: body
          required: true
          description: friend to suggest to
          schema:
            type: object
            properties:
              phoneNumber:
                type: array
                description: mobile (cell) phone number of user
                items:
                  type: string
                  #pattern: '^(\+?989\d{2}|09\d{2})\d{7}$'
                  default: '09123334444'
      security:
        - basic: []
      tags:
        - Users
        - 'Role: app'
      responses:
        200:
          description: promotion is done
          schema:
            type: object
            properties:
              id:
                type: integer
  /ClassicSaladCatagories:
    x-swagger-router-controller: classicsaladcatagories
    get:
      description: gets classic (pre-made) salads in the system
      operationId: getClassicSaladCatagories
      parameters:
        - $ref: '#/parameters/listStart'
        - $ref: '#/parameters/listLength'
      security:
        - basic: []
      x-required-role: app
      tags:
        - Classic Salad Catagories
        - 'Role: app'
      responses:
        200:
          description: returns pre-made salads in the system
          schema:
            type: object
            required:
              - recordsTotal
              - recordsFiltered
              - data
            properties:
              recordsFiltered:
                type: integer
                description: total number of filtered records
                minimum: 0
              recordsTotal:
                type: integer
                description: total number of records
                minimum: 0
              data:
                type: array
                description: actual list of salad catagories
                items:
                  $ref: '#/definitions/ClassicSaladCatagory'
        500:
          $ref: '#/responses/InternalServerError'
  /ClassicSalads/{catagoryId}:
    x-swagger-router-controller: classicsalad
    get:
      description: gets list of classic salads for a catagory
      operationId: getClassicSaladsByCatagory
      parameters:
        - name: catagoryId
          in: path
          description: catagory to fetch classic salads for
          type: integer
          required: true
        - $ref: '#/parameters/listStart'
        - $ref: '#/parameters/listLength'
      security:
        - basic: []
      x-required-role: app
      tags:
        - 'Role: app'
        - Classic Salads
      responses:
        200:
          description: returns list of classic salads
          schema:
            type: object
            required:
              - recordsTotal
              - recordsFiltered
              - data
            properties:
              recordsFiltered:
                type: integer
                description: total number of filtered records
                minimum: 0
              recordsTotal:
                type: integer
                description: total number of records
                minimum: 0
              data:
                type: array
                description: actual list of salads
                items:
                  $ref: '#/definitions/ClassicSalad'
        404:
          $ref: '#/responses/NotFound'
        500:
          $ref: '#/responses/InternalServerError'
  /SavedSalads/Me:
    x-swagger-router-controller: savedsalad
    get:
      description: gets list of saved salads ordered by current user
      operationId: getSavedSaladsByMe
      parameters:
        - $ref: '#/parameters/listStart'
        - $ref: '#/parameters/listLength'
      security:
        - basic: []
      x-required-role:
        - app
      tags:
        - 'Role: app'
        - Saved Salads
      responses:
        200:
          description: list of saved user salads
          schema:
            type: object
            properties:
              recordsTotal:
                type: integer
                description: total number of filtered records
                minimum: 0
              recordsFiltered:
                type: integer
                description: total number of records
                minimum: 0
              data:
                type: array
                description: an array containing filtered saved salads
                items:
                  $ref: '#/definitions/SavedSalad'
        500:
          $ref: '#/responses/InternalServerError'
  /DeliverySchedule:
    x-swagger-router-controller: deliveryschedule
    get:
      description: retrieves list of avai
      operationId: getDeliverySchedules
      security:
        - basic: []
      x-required-role:
        - app
      tags:
        - 'Role: app'
        - Delivery Schedules
      parameters:
        - name: catagory
          in: query
          description: filter by a specific catagory
          type: string
          required: false
          enum:
            - launch
            - dinner
        - $ref: '#/parameters/listStart'
        - $ref: '#/parameters/listLength'
      responses:
        200:
          description: returns requested delivery schedules
          schema:
            type: object
            required:
              - recordsTotal
              - recordsFiltered
              - data
            properties:
              recordsFiltered:
                type: integer
                description: total number of filtered records
                minimum: 0
              recordsTotal:
                type: integer
                description: total number of records
                minimum: 0
              data:
                type: array
                items:
                  $ref: '#/definitions/DeliverySchedule'
        500:
          $ref: '#/responses/InternalServerError'
  /Orders:
    x-swagger-router-controller: order
    put:
      description: place a new salad record! yeeaaah!
      operationId: orderNewSalad
      security:
        - basic: []
      x-required-role:
        - app
      tags:
        - 'Role: app'
        - Orders
      parameters:
        - name: order
          in: body
          description: new salad order to place
          schema: 
            $ref: '#/definitions/Order'
      responses:
        200:
          description: identifies that order is successfuly placed
          schema:
            type: object
            required:
              - id
            properties:
              id:
                description: id of newly placed order
                type: integer
        500:
          $ref: '#/responses/InternalServerError'
        404:
          $ref: '#/responses/NotFound'
  /Orders/NewCustom:
    x-swagger-router-controller: order
    put:
      description: place a new custom salad order
      operationId: orderNewCustomSalad
      security:
        - basic: []
      x-required-role:
        - app
      tags:
        - 'Role: app'
        - Orders
      parameters:
        - name: orderCustomSalad
          in: body
          description: new salad to place
          schema:
            type: object
            required:
              - ingredients
              - deliveryDate
              - deliveryScheduleId
              - address
              - name
            properties:
              ingredients:
                type: array
                minLength: 1
                items:
                  $ref: '#/definitions/PickedSaladComponent'
              deliveryDate:
                $ref: '#/definitions/PersianDate'
              deliveryScheduleId:
                type: integer
                description: id of requested delivery schedule
                minimum: 0
              address:
                type: string
                description: address to delivery to
                minLength: 1
              name:
                type: string
                description: name of new salad to save
                minLength: 1
      responses:
        200:
          description: new order is placed and saved!
          schema:
            type: object
            required:
              - id
            properties:
              id:
                description: id of new order
                type: integer
                minimum: 0
        404:
          $ref: '#/responses/NotFound'
        500:
          $ref: '#/responses/InternalServerError'
  /Orders/Me:
    x-swagger-router-controller: order
    get:
      description: gets orders made by current logged on user
      operationId: getOrdersByMe
      security:
        - basic: []
      x-required-role:
        - app
      tags:
        - 'Role: app'
        - Orders
      parameters:
        - $ref: '#/parameters/listStart'
        - $ref: '#/parameters/listLength'
        - $ref: '#/parameters/fromDateYear'
        - $ref: '#/parameters/fromDateMonth'
        - $ref: '#/parameters/fromDateDay'
        - $ref: '#/parameters/toDateYear'
        - $ref: '#/parameters/toDateMonth'
        - $ref: '#/parameters/toDateDay'
      responses:
        200:
          description: searches and returns orders
          schema:
            type: object
            required:
              - recordsTotal
              - recordsFiltered
              - data
            properties:
              recordsTotal:
                type: integer
                description: returns total number of filtered records
                minimum: 0
              recordsFiltered:
                type: integer
                description: returns total number of records
                minimum: 0
              data:
                type: array
                items:
                  $ref: '#/definitions/Order'
        500:
          $ref: '#/responses/InternalServerError'
        400:
          $ref: '#/responses/BadRequest'
                
          

